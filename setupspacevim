#!/usr/bin/env bash

#######################################################################
# @author      : Linus Fernandes (linusfernandes@gmail.com)
# @file        : setupspacevim
# @created     : Wednesday Mar 12, 2025 15:08:00 IST
# @copyright   : Copyright (c) Linus Fernandes
# @description : Script to set up SpaceVim with custom configurations
######################################################################
set -euo pipefail
shopt -s inherit_errexit

parentpath="$(dirname "$(readlink -f "$0")")"

if [[ -e "${parentpath}/internet.sh" ]]; then
  # shellcheck disable=SC1091
  source "${parentpath}/internet.sh"
fi

# Set Bash version
BASH_VERSION_REQUIRED="4.4"
if [ "${BASH_VERSION}" \< "$BASH_VERSION_REQUIRED" ]; then
  echo "Error: Bash version $BASH_VERSION_REQUIRED or higher is required."
  exit 1
fi

# shellcheck disable=SC1091
source "$parentpath/require.sh"

# Check if Configurations repository exists
if [[ ! -d "${HOME}/Configurations" ]]; then
  echo "ERROR: The repository https://github.com/linusjf/Configurations is not found at ~/Configurations."
  echo "INFO: This repository contains the necessary configuration files for SpaceVim."
  read -p "Would you like to clone it now? (y/n) " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    require git
    git clone https://github.com/linusjf/Configurations "${HOME}/Configurations"
  else
    read -p "Continue anyway? (y/n) " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Nn]$ ]]; then
      exit 1
    fi
  fi
fi

usage() {
  echo "Usage: $0 [OPTION]"
  echo ""
  echo "Options:"
  echo " -n Use Neovim instead of Vim"
  echo " -h Display this help message"
  echo " -t Use init.toml not init.vim"
  echo ""
  exit 0
}

# Define variables
HOME_DIR="$HOME"
SPACEVIM_INSTALL_SCRIPT="https://spacevim.org/install.sh"
VIM_EXECUTABLE="vim"
use_toml=false

# Parse command-line options
while getopts ":hnt" opt; do
  case $opt in
    n) VIM_EXECUTABLE="nvim" ;;
    h) usage ;;
    t) use_toml=true ;;
    \?)
      echo "Invalid option: -$OPTARG"
      usage
      ;;
  esac
done

# Ensure dependencies
require curl "$VIM_EXECUTABLE" rm mv ln readlink mkdir

# Check for existing Vim/Neovim configurations
if [[ -d "${HOME_DIR}/.vim" || -d "${HOME_DIR}/.config/nvim" || -d "${HOME_DIR}/.SpaceVim" ]]; then
  echo "WARNING: Existing Vim/Neovim configuration detected."
  read -p "This will remove your existing configuration. Continue? (y/n) " -n 1 -r
  echo
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    exit 1
  fi

  # Remove existing SpaceVim directories
  for dir in "${HOME_DIR}/.vim" "${HOME_DIR}/.config/nvim"; do
    if [[ -d "$dir" ]] && [[ "$(readlink "${dir}" 2> /dev/null)" =~ \.?SpaceVim$ ]]; then
      rm "$dir"
    fi
  done

  for dir in "${HOME_DIR}/.cache/SpaceVim" "${HOME_DIR}/.SpaceVim" "${HOME_DIR}/.SpaceVim.d"; do
    if [ -d "$dir" ]; then
      rm -rf "$dir"
    fi
  done
fi

# Install SpaceVim
echo "Downloading SpaceVim installation script..."
curl -sLfO "$SPACEVIM_INSTALL_SCRIPT"
chmod +x ./install.sh

echo "Checking SpaceVim requirements..."
if ! ./install.sh --checkRequirements; then
  echo "ERROR: SpaceVim requirements check failed."
  read -p "Continue anyway? (y/n) " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Nn]$ ]]; then
    rm -f ./install.sh
    exit 1
  fi
fi

echo "Installing SpaceVim..."
./install.sh

# Create .SpaceVim.d directory and default.toml
if [[ ! -d "${HOME}/.SpaceVim.d" ]]; then
  mkdir -p "${HOME}/.SpaceVim.d"
fi

# Delete SpaceVim default init.toml
# We want to use our init instead
if [ -f "${HOME_DIR}/.SpaceVim.d/init.toml" ]; then
  mv "${HOME_DIR}/.SpaceVim.d/init.toml" "${HOME_DIR}/.SpaceVim.d/init.toml.bak"
fi

# Configure SpaceVim
echo "Configuring SpaceVim..."
if "$use_toml"; then
  config_file="${HOME_DIR}/Configurations/init.toml"
  target_file="${HOME_DIR}/.SpaceVim.d/init.toml"
  if [ -f "$config_file" ]; then
    ln -sf "$config_file" "$target_file"
    echo "Linked $config_file to $target_file"

    if [ -d "${HOME_DIR}/Configurations/autoload" ]; then
      ln -sf "${HOME_DIR}/Configurations/autoload" "${HOME_DIR}/.SpaceVim.d/autoload"
      echo "Linked autoload directory"
    fi
  else
    echo "Error: Configuration file '$config_file' not found."
    exit 1
  fi
else
  config_file="${HOME_DIR}/Configurations/init.vim"
  target_file="${HOME_DIR}/.SpaceVim.d/init.vim"
  if [ -f "$config_file" ]; then
    ln -sf "$config_file" "$target_file"
    echo "Linked $config_file to $target_file"
  else
    echo "Error: Configuration file '$config_file' not found."
    exit 1
  fi
fi

rm -f ./install.sh
echo "SpaceVim setup completed successfully!"
echo "Launch $VIM_EXECUTABLE to start using SpaceVim"
exit 0
