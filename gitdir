#!/usr/bin/env bash
# shellcheck disable=SC2155,SC1090,SC1091
######################################################################
# Get absolute path to git repository directory
######################################################################
set -euo pipefail
shopt -s inherit_errexit

readonly SCRIPT_NAME="$(basename "$0")"
readonly VERSION="1.0.0"
readonly EXIT_FAILURE=1

# Source required functions
source "$(dirname "$(readlink -f "$0")")/require.sh"
source "$(dirname "$(readlink -f "$0")")/util.sh"

# Defaults
debug=false
verbose=false

function usage() {
  cat << EOF
${SCRIPT_NAME} - Get git repository directory path

Usage: ${SCRIPT_NAME} [OPTION]

Options:
  -d, --debug    Enable debug output
  -v, --verbose  Enable verbose output
  -q, --quiet    Suppress all output
  --version      Show version information
  -h, --help     Display this help message

Examples:
  ${SCRIPT_NAME}          # Print git directory path
  ${SCRIPT_NAME} --debug  # Print path with debug output
EOF
}

function version() {
  printf "%s\n" "$VERSION"
}

function main() {
  parse_arguments "$@"
  setup_environment
  get_git_dir
  cleanup_environment
}

function parse_arguments() {
  while [[ $# -gt 0 ]]; do
    case "$1" in
      -d | --debug)
        debug=true
        shift
        ;;
      -v | --verbose)
        # shellcheck disable=SC2034
        verbose=true
        shift
        ;;
      --version)
        version
        exit 0
        ;;
      -h | --help)
        usage
        exit 0
        ;;
      *)
        err "Error: Invalid argument '$1'"
        usage
        exit "$EXIT_FAILURE"
        ;;
    esac
  done
}

function setup_environment() {
  if "$debug"; then
    set -x
  fi

  require_or_exit git readlink
}

function cleanup_environment() {
  if "$debug"; then
    set +x
  fi
}

function get_git_dir() {
  local git_dir
  if ! git_dir="$(readlink -f "$(git rev-parse --git-dir)")"; then
    err "Error retrieving Git repository directory"
    exit "$EXIT_FAILURE"
  fi

  out "$git_dir"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi
