#!/usr/bin/env bash
# shellcheck disable=SC2155,SC1090,SC1091
######################################################################
# gitroot - Print the root directory of the current Git repository
######################################################################
set -euo pipefail
shopt -s inherit_errexit

readonly SCRIPT_NAME=$(basename "$0")
readonly EXIT_SUCCESS=0
readonly EXIT_FAILURE=1

function usage() {
  cat << EOF
${SCRIPT_NAME} - Print the root directory of the current Git repository

Usage: ${SCRIPT_NAME} [OPTION]

Options:
  -h, --help    Display this help message
  -v, --verbose Enable verbose output
  --debug       Enable debug output

Examples:
  ${SCRIPT_NAME}          # Print Git root directory
  ${SCRIPT_NAME} --debug  # Enable debug mode
EOF
  exit ${EXIT_FAILURE}
}

function main() {
  local verbose=false

  while [[ $# -gt 0 ]]; do
    case "$1" in
      -v | --verbose)
        verbose=true
        shift
        ;;
      --debug)
        set -x
        shift
        ;;
      -h | --help) usage ;;
      *)
        print_error "Invalid option: $1"
        usage
        ;;
    esac
  done

  # Source git utility functions
  source "${SCRIPT_DIR}/git.sh"

  require_git
  is_git_repository || exit ${EXIT_FAILURE}

  local root
  if ! root=$(git_root); then
    exit ${EXIT_FAILURE}
  fi

  ${verbose} && print_info "Git repository root: ${root}"
  printf "%s\n" "${root}"
  return ${EXIT_SUCCESS}
}

# Source required utilities
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)"
source "${SCRIPT_DIR}/require.sh"

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi
