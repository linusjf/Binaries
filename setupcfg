#!/usr/bin/env bash

warn() {
  echo -e "\033[1;33m${1}\033[0m"
}

info() {
  echo -e "\033[1;36m$1\033[0m"
}

error() {
  echo -e "\033[1;31m$1\033[0m" >&2
}

link_configurations() {
  local ret=0
  local config_dir="$HOME/Configurations"
  local home_dir="$HOME"

  if [ ! -d "$config_dir" ]; then
    error "$config_dir directory does not exist."
    return 1
  fi

  for item in "$@"; do
    local item_path="$config_dir/$item"
    local link_path="$home_dir/$item"

    if [ ! -e "$item_path" ]; then
      warn "$item_path does not exist."
      continue
    fi

    if [ -e "$link_path" ]; then
      if [ -f "$link_path" ]; then
        cp "${link_path}" "${link_path}.old"
      fi
      if [ -d "$link_path" ]; then
        if [[ -L "$link_path" ]]; then
          local real_path
          real_path="$(readlink "$link_path")"
          if [[ -e "$real_path" ]]; then
            # real path should not be in Configurations directory
            if [[ "$real_path" == *Configurations* ]]; then
              warn "Skipped ${link_path} --> ${real_path}"
              continue
            else
              warn "Removing ${link_path} --> ${real_path}."
            fi
          fi
        else
          cp "${link_path}" "${link_path}.old"
        fi
      fi
    fi

    ln -sf "$item_path" "$link_path" || ((ret = 1))
    info "$link_path --> $item_path"
  done

  exit "$ret"
}

function require() {
  local missing_deps=()

  for dep in "$@"; do
    if ! command -v "$dep" &> /dev/null; then
      missing_deps+=("$dep")
    fi
  done

  if [ ${#missing_deps[@]} -gt 0 ]; then
    error "The following dependencies were not found:"
    for dep in "${missing_deps[@]}"; do
      error "\033[1;31m - %s\033[0m\n" "$dep" >&2
    done
    return 1
  fi
}

set -eou pipefail
shopt -s inherit_errexit

require cp

link_configurations .bashrc .bash_profile .bash_aliases .bash_logout \
  .gitconfig .gitrc .github .gitguardian.yml .emacs .sqliterc .ssh .termux .tmux.conf \
  .vimrc .jupyter .aider.conf.yml .aider.model.settings.yml

# handle git differently
if [[ -L "${HOME}/.git" ]]; then
  ln -sf "${HOME}/Configurations/git" "${HOME}/.git"
else
  cp "${HOME}/.git" "${HOME}/.git.old"
fi
exit 0
