#!/usr/bin/env bash
set -euo pipefail
shopt -s inherit_errexit

# Detect environment
if [[ -d /data/data/com.termux/files/usr ]]; then
  STORAGE_BASE="${HOME}/storage"
elif [[ -f /etc/arch-release ]]; then
  STORAGE_BASE="${HOME}"
elif [[ -f /etc/lsb-release ]] && grep -q "Ubuntu" /etc/lsb-release; then
  STORAGE_BASE="${HOME}"
else
  echo "Unsupported environment" >&2
  exit 1
fi

# Source the require.sh file
SCRIPT_DIR=$(dirname "$(readlink -f "$0" 2> /dev/null || realpath "$0")")
# shellcheck disable=SC1091
source "$SCRIPT_DIR/require.sh" 2> /dev/null || {
  echo "Warning: require.sh not found, continuing without it" >&2
}

# Ensure necessary commands are available
require mkdir find mv

# Check if at least 2 arguments are provided
if [[ $# -lt 2 ]]; then
  echo "Usage: $0 [-n|--dry-run] <destination_folder> <file_pattern>"
  echo "  -n, --dry-run   Show what would be moved without actually moving files."
  exit 1
fi

# Initialize variables
DRY_RUN=false

# Check for dry-run flag
if [[ "$1" == "-n" || "$1" == "--dry-run" ]]; then
  DRY_RUN=true
  shift # Remove flag from arguments
fi

# Assign arguments
DEST_FOLDER="${STORAGE_BASE}/${1}"
FILE_PATTERN="$2"

if [[ "$DRY_RUN" == true ]]; then
  echo "[DRY RUN] Would create directory: $DEST_FOLDER"
else
  mkdir -p "$DEST_FOLDER" || {
    echo "Error: Failed to create directory $DEST_FOLDER" >&2
    exit 1
  }
fi

if [[ "$DRY_RUN" == true ]]; then
  echo "[DRY RUN] Files that would be moved to '$DEST_FOLDER':"
  find . -type f -name "$FILE_PATTERN" -print0 | xargs -0 -I{} echo "{} -> $DEST_FOLDER"
else
  # Find and move matching files
  find . -type f -name "$FILE_PATTERN" -print0 | xargs -0 -I{} mv {} "$DEST_FOLDER" || {
    echo "Error: Failed to move files" >&2
    exit 1
  }
  echo "Files matching '$FILE_PATTERN' have been moved to '$DEST_FOLDER'."
fi

exit 0
