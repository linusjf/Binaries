#!/usr/bin/env bash
set -euo pipefail
shopt -s inherit_errexit

# MySQL/MariaDB client wrapper script
# Provides standardized connection handling and error reporting

readonly VERSION="1.0.0"

#######################################
# Output script version
# Globals:
#   VERSION
# Arguments:
#   None
# Outputs:
#   Version string to stdout
#######################################
version() {
  printf "%s\n" "$VERSION"
}

#######################################
# Output usage information
# Globals:
#   None
# Arguments:
#   None
# Outputs:
#   Usage instructions to stdout
#######################################
usage() {
  cat << EOF
Usage: ${0##*/} [options]
  
Options:
  -h, --help     Show this help message
  -v, --version  Show version information
  -u, --user     Database username (default: u0_a286)
EOF
}

#######################################
# Main function
# Globals:
#   SCRIPT_DIR
# Arguments:
#   Command line arguments
# Outputs:
#   May output errors to stderr
# Returns:
#   Exit status of mariadb command
#######################################
main() {
  local user="u0_a286"

  # Parse arguments
  while [[ $# -gt 0 ]]; do
    case "$1" in
      -h | --help)
        usage
        exit 0
        ;;
      -v | --version)
        version
        exit 0
        ;;
      -u | --user)
        user="$2"
        shift
        ;;
      *)
        err "Unknown option: $1"
        usage >&2
        exit 1
        ;;
    esac
    shift
  done

  # Source required dependencies
  SCRIPT_DIR=$(dirname "$(readlink -f "$0")")
  # shellcheck disable=SC1091
  source "$SCRIPT_DIR/require.sh"

  # Use require_or_exit to ensure mariadb is available
  require_or_exit mariadb

  # Execute mariadb with the specified user
  exec mariadb -u "$user"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi
